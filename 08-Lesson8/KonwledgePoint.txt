一、一些概念
1.地址
>特殊的整数,通常用十六进制表示
    >计算机的内存可以看作是由一系列内存单元组成,每个内存单元(一个字节容量)由一个地址进行标识
>

2.访问数据的方式
    ①通过变量名:变量的地址与变量名之间存在
    ②通过变量地址:

二、指针的基本概念
1.定义:
2.构造:由一个变量类型(基类型)关键词和一个 * 构造而成
3.指针变量的定义方法
4.指针变量初始化:可以用 一个变量的地址(&<variableName>) || 另一个指针变量或指针常量 || NULL 来初始化一个指针变量
    >要求:用来初始化的指针变量要预先定义,且
5.相关操作
    ①取地址操作:用&(地址操作符)获取操作数的地址
    ②取值操作:用*(指针操作符)获得指针变量指向的内存数据,其操作数应为指针变量或地址类型的数据
    注:构造指针类型时的 * 不是指针操作符
    ③赋值操作:指针变量赋值操作右边的操作数必须是一个地址
    ④关系/逻辑操作:两个指针类型可以进行比较,判断它们在内存中的位置的前后关系(前提:同一个)
    ⑤+/-一个整数:可以使原来的地址成为另一个变量的地址(前提:操作结果是一个有效的内存单元地址)
    注意:
    ⑥两个相同类型的指针类型数据的相减:结果为两个地址之间可存储基类型数据的个数
6.输出

7.指针数组
    >定义:数组的每一个元素都是指针类型的数据

8.多级指针变量
e.g.
int i = 0;
int *pi = &i;
int **ppi = &pi;    //指针变量ppi存储的是指针变量pi的地址
    >用途:通常用于

9.void类型:通用指针类型
    >不指向

三、指针的应用
1.用指针操纵一维数组
    ①
    >下标法:
    >指针移动法:
    >偏移量法:
注:指向数组元素的指针变量 vs 数组名
    ①数组名是常量
    ②指向数组元素的指针变量是变量

    ②数组的指针:
    e.g.
    int (*p)[10];
    int a[10] = {0};
    p = &a;    //此处p是一个二级指针
    //(*p)[i] <==> a[i]
注:int *p[10] vs int (*p)[10]
    ①int *p[10]是一个数组
2.用指针操纵二维数组
    ①
    e.g.
    int b[5][10] = {0};
