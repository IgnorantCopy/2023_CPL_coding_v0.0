一、文件的基本概念
1.读取文件的方式
    >在C中,把文件看成是由一系列字节所构成的字节串,对文件中数据的操作(输入/输出)通常是逐个字节顺序进行,因此称为流式文件
    >每个打开的文件都有一个内部(隐藏)的位置指针,它指出文件的当前读写位置
    >进行读/写操作时，每读入/写出一个字节,文件位置指针会自动往后移动一个字节的位置
2.文件数据的存储方式
    ①文本方式(text):
        >只包含可显示的字符和有限的几个控制字符(如:'\r' '\n' '\t'等)的编码
        >可以存储具有“行”结构的文本数据(可用文本编辑软件察看)
    ②二进制方式(binary):
        >包含任意的没有显式含义的二进制字节
        >可以存储任意结构的数据(格式一般只有写文件的人知道)
2.对文件的操作(对文件的访问):通常是按字节为单位顺序进行
    ①读操作:一般指从外存设备将数据逐个字节读至内存(对于内存而言，是输入数据)
    ②写操作:一般指将内存的数据逐个字节写至外部设备(对于内存而言，是输出数据)

二、文件结构类型
typedef struct {
    short level;            // 缓冲区满空程度
    unsigned flags;         // 文件状态标志
    char fd;                // 文件描述符
    unsigned char hold;     // 无缓冲则不读取字符
    short bsize;            // 缓冲区大小
    unsigned char *buffer;  // 数据缓冲区
    unsigned char *curp;    // 当前位置指针:每读/写一个字节,自动自增1
    short token;            // 用于有效性检查
} FILE;

三、文件的具体操作
1.打开文件
    >FILE *fopen(const char *filename, const char *mode);
    // filename:要打开的文件路径    mode:文件的处理模式
    // return value: 如果文件存在,返回打开文件信息描述区的地址,否则返回空指针
注: 文件的打开方式:
        打开模式            描述
    >r: 只读          打开已有文件,不能写
    >w: 只写          创建或打开,覆盖已有文件
    >a: 追加          创建或打开,在已有文件末尾追加
    >r+: 读写         打开已有文件
    >w+: 读写         创建或打开,覆盖已有文件
    >a+: 读写         创建后打开,在已有文件末尾追加
    >t: 按文本方式打开(缺省)
    >b: 按二进制方式打开

e.g.
    FILE *file = fopen("d:\\data\\file.txt", "w");
    // 字符串中的反斜杠需要转义
    if (file == NULL) {
        printf("Error!\n");
    } else {
        printf("file.txt has been opened.\n");
    }
2.执行读写操作
    >int fprintf(FILE *stream, const char *format, ...);
    >fscanf
3.关闭文件: int fclose(FILE *fileName);
